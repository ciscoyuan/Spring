<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finals.sys.mapper.GoodBaseMapper">
  <resultMap id="BaseResultMap" type="com.finals.sys.model.GoodBase">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_code" jdbcType="VARCHAR" property="goodsCode" />
    <result column="mno_type" jdbcType="CHAR" property="mnoType" />
    <result column="goods_type" jdbcType="VARCHAR" property="goodsType" />
    <result column="cycle" jdbcType="INTEGER" property="cycle" />
    <result column="cycle_unit" jdbcType="TINYINT" property="cycleUnit" />
    <result column="flow" jdbcType="BIGINT" property="flow" />
    <result column="flow_unit" jdbcType="CHAR" property="flowUnit" />
    <result column="month_flag" jdbcType="TINYINT" property="monthFlag" />
    <result column="pre_flow" jdbcType="BIGINT" property="preFlow" />
    <result column="pre_flow_unit" jdbcType="CHAR" property="preFlowUnit" />
    <result column="goods_status" jdbcType="TINYINT" property="goodsStatus" />
    <result column="goods_desc" jdbcType="VARCHAR" property="goodsDesc" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="effective_time" jdbcType="TIMESTAMP" property="effectiveTime" />
    <result column="failure_time" jdbcType="TIMESTAMP" property="failureTime" />
    <result column="goods_sort" jdbcType="INTEGER" property="goodsSort" />
    <result column="created_code" jdbcType="VARCHAR" property="createdCode" />
    <result column="created_name" jdbcType="VARCHAR" property="createdName" />
    <result column="created_dt" jdbcType="TIMESTAMP" property="createdDt" />
    <result column="updated_code" jdbcType="VARCHAR" property="updatedCode" />
    <result column="updated_name" jdbcType="VARCHAR" property="updatedName" />
    <result column="updated_dt" jdbcType="TIMESTAMP" property="updatedDt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_code, mno_type, goods_type, cycle, cycle_unit, flow, 
    flow_unit, month_flag, pre_flow, pre_flow_unit, goods_status, goods_desc, cust_id, 
    effective_time, failure_time, goods_sort, created_code, created_name, created_dt, 
    updated_code, updated_name, updated_dt
  </sql>
  <select id="selectByExample" parameterType="com.finals.sys.model.GoodBaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from home.good_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.finals.sys.model.GoodBaseExample">
    delete from home.good_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.finals.sys.model.GoodBase">
    <selectKey keyProperty="goodsId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into home.good_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsCode != null">
        goods_code,
      </if>
      <if test="mnoType != null">
        mno_type,
      </if>
      <if test="goodsType != null">
        goods_type,
      </if>
      <if test="cycle != null">
        cycle,
      </if>
      <if test="cycleUnit != null">
        cycle_unit,
      </if>
      <if test="flow != null">
        flow,
      </if>
      <if test="flowUnit != null">
        flow_unit,
      </if>
      <if test="monthFlag != null">
        month_flag,
      </if>
      <if test="preFlow != null">
        pre_flow,
      </if>
      <if test="preFlowUnit != null">
        pre_flow_unit,
      </if>
      <if test="goodsStatus != null">
        goods_status,
      </if>
      <if test="goodsDesc != null">
        goods_desc,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="effectiveTime != null">
        effective_time,
      </if>
      <if test="failureTime != null">
        failure_time,
      </if>
      <if test="goodsSort != null">
        goods_sort,
      </if>
      <if test="createdCode != null">
        created_code,
      </if>
      <if test="createdName != null">
        created_name,
      </if>
      <if test="createdDt != null">
        created_dt,
      </if>
      <if test="updatedCode != null">
        updated_code,
      </if>
      <if test="updatedName != null">
        updated_name,
      </if>
      <if test="updatedDt != null">
        updated_dt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null">
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="mnoType != null">
        #{mnoType,jdbcType=CHAR},
      </if>
      <if test="goodsType != null">
        #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=INTEGER},
      </if>
      <if test="cycleUnit != null">
        #{cycleUnit,jdbcType=TINYINT},
      </if>
      <if test="flow != null">
        #{flow,jdbcType=BIGINT},
      </if>
      <if test="flowUnit != null">
        #{flowUnit,jdbcType=CHAR},
      </if>
      <if test="monthFlag != null">
        #{monthFlag,jdbcType=TINYINT},
      </if>
      <if test="preFlow != null">
        #{preFlow,jdbcType=BIGINT},
      </if>
      <if test="preFlowUnit != null">
        #{preFlowUnit,jdbcType=CHAR},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=TINYINT},
      </if>
      <if test="goodsDesc != null">
        #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="effectiveTime != null">
        #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failureTime != null">
        #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsSort != null">
        #{goodsSort,jdbcType=INTEGER},
      </if>
      <if test="createdCode != null">
        #{createdCode,jdbcType=VARCHAR},
      </if>
      <if test="createdName != null">
        #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="createdDt != null">
        #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedCode != null">
        #{updatedCode,jdbcType=VARCHAR},
      </if>
      <if test="updatedName != null">
        #{updatedName,jdbcType=VARCHAR},
      </if>
      <if test="updatedDt != null">
        #{updatedDt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.finals.sys.model.GoodBaseExample" resultType="java.lang.Long">
    select count(*) from home.good_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update home.good_base
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCode != null">
        goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.mnoType != null">
        mno_type = #{record.mnoType,jdbcType=CHAR},
      </if>
      <if test="record.goodsType != null">
        goods_type = #{record.goodsType,jdbcType=VARCHAR},
      </if>
      <if test="record.cycle != null">
        cycle = #{record.cycle,jdbcType=INTEGER},
      </if>
      <if test="record.cycleUnit != null">
        cycle_unit = #{record.cycleUnit,jdbcType=TINYINT},
      </if>
      <if test="record.flow != null">
        flow = #{record.flow,jdbcType=BIGINT},
      </if>
      <if test="record.flowUnit != null">
        flow_unit = #{record.flowUnit,jdbcType=CHAR},
      </if>
      <if test="record.monthFlag != null">
        month_flag = #{record.monthFlag,jdbcType=TINYINT},
      </if>
      <if test="record.preFlow != null">
        pre_flow = #{record.preFlow,jdbcType=BIGINT},
      </if>
      <if test="record.preFlowUnit != null">
        pre_flow_unit = #{record.preFlowUnit,jdbcType=CHAR},
      </if>
      <if test="record.goodsStatus != null">
        goods_status = #{record.goodsStatus,jdbcType=TINYINT},
      </if>
      <if test="record.goodsDesc != null">
        goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.effectiveTime != null">
        effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.failureTime != null">
        failure_time = #{record.failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsSort != null">
        goods_sort = #{record.goodsSort,jdbcType=INTEGER},
      </if>
      <if test="record.createdCode != null">
        created_code = #{record.createdCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createdName != null">
        created_name = #{record.createdName,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDt != null">
        created_dt = #{record.createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedCode != null">
        updated_code = #{record.updatedCode,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedName != null">
        updated_name = #{record.updatedName,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedDt != null">
        updated_dt = #{record.updatedDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update home.good_base
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_code = #{record.goodsCode,jdbcType=VARCHAR},
      mno_type = #{record.mnoType,jdbcType=CHAR},
      goods_type = #{record.goodsType,jdbcType=VARCHAR},
      cycle = #{record.cycle,jdbcType=INTEGER},
      cycle_unit = #{record.cycleUnit,jdbcType=TINYINT},
      flow = #{record.flow,jdbcType=BIGINT},
      flow_unit = #{record.flowUnit,jdbcType=CHAR},
      month_flag = #{record.monthFlag,jdbcType=TINYINT},
      pre_flow = #{record.preFlow,jdbcType=BIGINT},
      pre_flow_unit = #{record.preFlowUnit,jdbcType=CHAR},
      goods_status = #{record.goodsStatus,jdbcType=TINYINT},
      goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      cust_id = #{record.custId,jdbcType=INTEGER},
      effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
      failure_time = #{record.failureTime,jdbcType=TIMESTAMP},
      goods_sort = #{record.goodsSort,jdbcType=INTEGER},
      created_code = #{record.createdCode,jdbcType=VARCHAR},
      created_name = #{record.createdName,jdbcType=VARCHAR},
      created_dt = #{record.createdDt,jdbcType=TIMESTAMP},
      updated_code = #{record.updatedCode,jdbcType=VARCHAR},
      updated_name = #{record.updatedName,jdbcType=VARCHAR},
      updated_dt = #{record.updatedDt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.finals.sys.model.GoodBase">
    update home.good_base
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCode != null">
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="mnoType != null">
        mno_type = #{mnoType,jdbcType=CHAR},
      </if>
      <if test="goodsType != null">
        goods_type = #{goodsType,jdbcType=VARCHAR},
      </if>
      <if test="cycle != null">
        cycle = #{cycle,jdbcType=INTEGER},
      </if>
      <if test="cycleUnit != null">
        cycle_unit = #{cycleUnit,jdbcType=TINYINT},
      </if>
      <if test="flow != null">
        flow = #{flow,jdbcType=BIGINT},
      </if>
      <if test="flowUnit != null">
        flow_unit = #{flowUnit,jdbcType=CHAR},
      </if>
      <if test="monthFlag != null">
        month_flag = #{monthFlag,jdbcType=TINYINT},
      </if>
      <if test="preFlow != null">
        pre_flow = #{preFlow,jdbcType=BIGINT},
      </if>
      <if test="preFlowUnit != null">
        pre_flow_unit = #{preFlowUnit,jdbcType=CHAR},
      </if>
      <if test="goodsStatus != null">
        goods_status = #{goodsStatus,jdbcType=TINYINT},
      </if>
      <if test="goodsDesc != null">
        goods_desc = #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="effectiveTime != null">
        effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="failureTime != null">
        failure_time = #{failureTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsSort != null">
        goods_sort = #{goodsSort,jdbcType=INTEGER},
      </if>
      <if test="createdCode != null">
        created_code = #{createdCode,jdbcType=VARCHAR},
      </if>
      <if test="createdName != null">
        created_name = #{createdName,jdbcType=VARCHAR},
      </if>
      <if test="createdDt != null">
        created_dt = #{createdDt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedCode != null">
        updated_code = #{updatedCode,jdbcType=VARCHAR},
      </if>
      <if test="updatedName != null">
        updated_name = #{updatedName,jdbcType=VARCHAR},
      </if>
      <if test="updatedDt != null">
        updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
</mapper>